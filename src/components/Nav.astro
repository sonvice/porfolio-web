---
import { navLink } from "@constant/index";
import { Icon } from "astro-icon/components";
const currentPath = Astro.url.pathname;
---

<nav class="nav | mt-space-xl">
  <ul role="list" class="nav__list | d-flex">
    {
      navLink.map((link) => {
        const isVisualActive =
          link.href === "/blog"
            ? currentPath.startsWith("/blog") && !currentPath.startsWith("/blogroll")
            : currentPath === link.href;

        const isAriaCurrent = (() => {
          const normalize = (p) => p.endsWith("/") && p !== "/" ? p.slice(0, -1) : p;
          return normalize(currentPath) === normalize(link.href);
        })();

        return (
          <li>
            <a
              class={`nav__link | border-animated d-flex px-space-3xs py-space-xs ${isVisualActive ? "active" : ""}`}
              href={`${link.href}`}
              aria-current={isAriaCurrent ? "page" : undefined}
            >
              <Icon name={link.icon} /> {link.label}
            </a>
          </li>
        );
      })
    }
  </ul>
</nav>

<script>
  document.addEventListener("astro:page-load", () => {
    const normalizePath = (path) =>
      path.endsWith("/") && path !== "/" ? path.slice(0, -1) : path;

    const currentPath = normalizePath(window.location.pathname);

    document.querySelectorAll(".nav__link").forEach((link) => {
      const linkPath = normalizePath(new URL(link.href).pathname);

      const visualActive =
        linkPath === "/blog"
          ? currentPath.startsWith("/blog") && !currentPath.startsWith("/blogroll")
          : linkPath === currentPath;

      // ariaCurrent only for exact match
      const ariaCurrent = linkPath === currentPath;

      if (visualActive) {
        link.classList.add("active");
      } else {
        link.classList.remove("active");
      }

      if (ariaCurrent) {
        link.setAttribute("aria-current", "page");
      } else {
        link.removeAttribute("aria-current");
      }
    });
  });
</script>
